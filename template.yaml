AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  health-integration-garmin

  Sample SAM Template for health-integration-garmin

Parameters:
  AppName:
    Type: String
    Default: svc_integration_garmin_serverless
  SdvBaseUrl:
    Type: String
    Default: https://df9dc980cc97.ngrok.io
    AllowedValues:
      - https://df9dc980cc97.ngrok.io
      - https://localhost:3000
    Description: Enter SDV URL.
  SendToBackend:
    Type: String
    Default: False
    # AllowedValues:
    #   - True
    #   - False
    Description: Save Transformed Data using Serverless Logic.
Globals:
  Function:
    Timeout: 60
    MemorySize: 512
    Environment:
      Variables:
        integration: garmin
        #endpoint: dynamodb.us-east-2.amazonaws.com
        #endpoint: http://host.docker.internal:4566
        Test: true
        BUCKET_NAME: health-integration-garmin
        MAP_STATE: true
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
  SAMLogs:
    Type: AWS::Logs::LogGroup
  HealthIntegrationGarminStateEvalMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS1:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s1.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s1
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS2:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s2.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s2
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS3:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s3.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s3
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS4:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s4.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s4
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS5:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s5.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s5
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS6:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s6.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessDailiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessDailies.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s6
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HandleGarminWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/handle-garmin-webhook/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Timeout: 30
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          SEND_DATA_BACKEND: !Sub '${SendToBackend}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /handle-webhook
            Method: ANY
  HealthIntegrationFusionS7:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s7.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessActivitiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessActivities.Arn
        ProcessGarminFullArn: !GetAtt ProcessGarminFull.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s7
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS8:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s8.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessActivitiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessActivities.Arn
        ProcessGarminFull2Arn: !GetAtt ProcessGarminFull2.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailies.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull2
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailies
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s8
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS9:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s9.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessActivitiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessActivities.Arn
        ProcessGarminFull2Arn: !GetAtt ProcessGarminFull2.Arn
        GarminWebhookLandingZoneFunctionProcessActivitiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessActivities.Arn
        ProcessDailiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessDailiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull2
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDailiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s9
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS10:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s10.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessActivitiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessActivities.Arn
        ProcessGarminFull2Arn: !GetAtt ProcessGarminFull2.Arn
        GarminWebhookLandingZoneFunctionProcessActivitiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessActivities.Arn
        ProcessActivitiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessActivitiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull2
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessActivitiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s10
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  HealthIntegrationFusionS11:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Description: AWS Step Function Eval to perform processing of Garmin data
    Properties:
      DefinitionUri: statemachine/health-integration-garmin-stepfunction-s11.asl.json
      Tracing:
        Enabled: True
      DefinitionSubstitutions:
        SaveGarminWebhookProcessedFunctionArn: !GetAtt SaveGarminWebhookProcessedFunction.Arn
        HandleGarminWebhookFunctionArn: !GetAtt HandleGarminWebhookFunction.Arn
        HandleWebhookGarminLandingZoneFunctionArn: !GetAtt HandleWebhookGarminLandingZoneFunction.Arn
        HandleWebhookGarminLandingZoneFunctionProcessActivitiesArn: !GetAtt HandleWebhookGarminLandingZoneFunctionProcessActivities.Arn
        ProcessGarminFull2Arn: !GetAtt ProcessGarminFull2.Arn
        GarminWebhookLandingZoneFunctionProcessActivitiesArn: !GetAtt GarminWebhookLandingZoneFunctionProcessActivities.Arn
        ProcessActivitiesSaveGarminWebhookProcessedFunctionArn: !GetAtt ProcessActivitiesSaveGarminWebhookProcessedFunction.Arn
        GarminWebhookLandingZoneFunctionProcessActivitiesSaveProcessedArn: !GetAtt GarminWebhookLandingZoneFunctionProcessActivitiesSaveProcessed.Arn
        FetchGarminFitFileFunctionArn: !GetAtt FetchGarminFitFileFunction.Arn
        GarminWebhookLandingZoneFunctionArn: !GetAtt GarminWebhookLandingZoneFunction.Arn
        ProcessGarminActivitiesFunctionArn: !GetAtt ProcessGarminActivitiesFunction.Arn
        ProcessGarminDailiesFunctionArn: !GetAtt ProcessGarminDailiesFunction.Arn
        UploadBaseplatformFunctionArn: !GetAtt UploadBaseplatformFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminFull2
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessActivities
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessActivitiesSaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunctionProcessActivitiesSaveProcessed
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveGarminWebhookProcessedFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleWebhookGarminLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HandleGarminWebhookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GarminWebhookLandingZoneFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminActivitiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessGarminDailiesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref UploadBaseplatformFunction
        - AWSSecretsManagerRotationPolicy:
            FunctionName: !Ref FetchGarminFitFileFunction
        - CloudWatchLogsFullAccess
        - CloudWatchPutMetricPolicy: { }
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /start-health-garmin-eval-s11
            RestApiId:
              Ref: MyApi
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
  SaveGarminWebhookProcessedFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/save-garmin-webhook/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
      Environment:
        Variables:
          tableName: HealthIntegrationProcessed
  FetchGarminFitFileFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/fetch-garmin-fit-file/
      Handler: app.lambdaHandler
      Tracing: Active
      Runtime: nodejs14.x
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Events:
        Api:
          Type: Api
          Properties:
            Path: /webhook-fit
            Method: ANY
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: FetchSecrets
            Effect: Allow
            Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Resource: 'arn:aws:secretsmanager:*:*:secret:*'
      Environment:
        Variables:
          GARMIN_CONSUMER_KEY: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
          GARMIN_CONSUMER_SECRET: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  GarminWebhookLandingZoneFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/garmin-webhook-landing-zone/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: PublishLayers
            Effect: Allow
            Action:
              - lambda:PublishLayerVersion
            Resource: 'arn:aws:lambda:*:*:layer:*:*'
          - Sid: ManageLayerVersions
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:Getlayerversion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
              - lambda:RemoveLayerVersionPermission
            Resource: '*'
          - Sid: S3CustomPolicy
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutLifecycleConfiguration
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource: 'arn:aws:s3:::health-integration-garmin/*'
  ProcessGarminActivitiesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/process-garmin-activities/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
  UploadBaseplatformFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/upload-baseplatform/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 120
      Layers:
        - !Ref UtilityLayer
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationUserInfo
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationUserInfo
      Environment:
        Variables:
          User_Table: HealthIntegrationUserInfo
          PUSH_BASE_FILENAME: integration_data_
          SDV_BASE_URL: !Sub ${SdvBaseUrl}
          DATA_UPLOAD_URL: !Sub ${SdvBaseUrl}/api/v1/data
          DIRECT_UPLOAD_URL: !Sub ${SdvBaseUrl}/rails/active_storage/direct_uploads
          JWT_SECRET_KEY: xxxxxxxxxxxxxxxxxxxxxx
          JWT_JTI: xxxxxxxxxxxxxxxxx
  ProcessGarminDailiesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/process-garmin-dailies/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
  HandleWebhookGarminLandingZoneFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/handle-garmin-webhook-save-landing/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          SEND_DATA_BACKEND: !Sub '${SendToBackend}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /handle-webhook-fused-1
            Method: ANY
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: PublishLayers
            Effect: Allow
            Action:
              - lambda:PublishLayerVersion
            Resource: 'arn:aws:lambda:*:*:layer:*:*'
          - Sid: ManageLayerVersions
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:Getlayerversion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
              - lambda:RemoveLayerVersionPermission
            Resource: '*'
          - Sid: S3CustomPolicy
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutLifecycleConfiguration
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource: 'arn:aws:s3:::health-integration-garmin/*'
  HandleWebhookGarminLandingZoneFunctionProcessDailies:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/handle-process-dailies-garmin-save-landing/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          SEND_DATA_BACKEND: !Sub '${SendToBackend}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /handle-webhook-fused-2
            Method: ANY
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: PublishLayers
            Effect: Allow
            Action:
              - lambda:PublishLayerVersion
            Resource: 'arn:aws:lambda:*:*:layer:*:*'
          - Sid: ManageLayerVersions
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:Getlayerversion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
              - lambda:RemoveLayerVersionPermission
            Resource: '*'
          - Sid: S3CustomPolicy
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutLifecycleConfiguration
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource: 'arn:aws:s3:::health-integration-garmin/*'
  HandleWebhookGarminLandingZoneFunctionProcessActivities:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/handle-process-activities-garmin-save-landing/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          SEND_DATA_BACKEND: !Sub '${SendToBackend}'
      Events:
        Api:
          Type: Api
          Properties:
            Path: /handle-webhook-fused-5
            Method: ANY
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
            - Sid: PublishLayers
              Effect: Allow
              Action:
                - lambda:PublishLayerVersion
              Resource: 'arn:aws:lambda:*:*:layer:*:*'
            - Sid: ManageLayerVersions
              Effect: Allow
              Action:
                - lambda:GetLayerVersion
                - lambda:Getlayerversion
                - lambda:DeleteLayerVersion
                - lambda:AddLayerVersionPermission
                - lambda:RemoveLayerVersionPermission
              Resource: '*'
            - Sid: S3CustomPolicy
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:PutLifecycleConfiguration
                - s3:GetObjectTagging
                - s3:GetObjectVersionTagging
                - s3:PutObjectTagging
                - s3:PutObjectVersionTagging
              Resource: 'arn:aws:s3:::health-integration-garmin/*'
  ProcessGarminFull:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/process-dailies-garmin-full/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          SEND_DATA_BACKEND: !Sub '${SendToBackend}'
          tableName: HealthIntegrationProcessed
      Events:
        Api:
          Type: Api
          Properties:
            Path: /handle-webhook-fused-3
            Method: ANY
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: PublishLayers
            Effect: Allow
            Action:
              - lambda:PublishLayerVersion
            Resource: 'arn:aws:lambda:*:*:layer:*:*'
          - Sid: ManageLayerVersions
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:Getlayerversion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
              - lambda:RemoveLayerVersionPermission
            Resource: '*'
          - Sid: S3CustomPolicy
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutLifecycleConfiguration
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource: 'arn:aws:s3:::health-integration-garmin/*'
  ProcessGarminFull2:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/process-activities-garmin-full/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          SEND_DATA_BACKEND: !Sub '${SendToBackend}'
          tableName: HealthIntegrationProcessed
      Events:
        Api:
          Type: Api
          Properties:
            Path: /handle-webhook-fused-4
            Method: ANY
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
            - Sid: PublishLayers
              Effect: Allow
              Action:
                - lambda:PublishLayerVersion
              Resource: 'arn:aws:lambda:*:*:layer:*:*'
            - Sid: ManageLayerVersions
              Effect: Allow
              Action:
                - lambda:GetLayerVersion
                - lambda:Getlayerversion
                - lambda:DeleteLayerVersion
                - lambda:AddLayerVersionPermission
                - lambda:RemoveLayerVersionPermission
              Resource: '*'
            - Sid: S3CustomPolicy
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:PutLifecycleConfiguration
                - s3:GetObjectTagging
                - s3:GetObjectVersionTagging
                - s3:PutObjectTagging
                - s3:PutObjectVersionTagging
              Resource: 'arn:aws:s3:::health-integration-garmin/*'
  GarminWebhookLandingZoneFunctionProcessDailies:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/garmin-webhook-landing-zone-process-dailies/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: PublishLayers
            Effect: Allow
            Action:
              - lambda:PublishLayerVersion
            Resource: 'arn:aws:lambda:*:*:layer:*:*'
          - Sid: ManageLayerVersions
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:Getlayerversion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
              - lambda:RemoveLayerVersionPermission
            Resource: '*'
          - Sid: S3CustomPolicy
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutLifecycleConfiguration
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource: 'arn:aws:s3:::health-integration-garmin/*'
  GarminWebhookLandingZoneFunctionProcessActivities:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/garmin-webhook-landing-zone-process-activities/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Policies:
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
            - Sid: PublishLayers
              Effect: Allow
              Action:
                - lambda:PublishLayerVersion
              Resource: 'arn:aws:lambda:*:*:layer:*:*'
            - Sid: ManageLayerVersions
              Effect: Allow
              Action:
                - lambda:GetLayerVersion
                - lambda:Getlayerversion
                - lambda:DeleteLayerVersion
                - lambda:AddLayerVersionPermission
                - lambda:RemoveLayerVersionPermission
              Resource: '*'
            - Sid: S3CustomPolicy
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:PutLifecycleConfiguration
                - s3:GetObjectTagging
                - s3:GetObjectVersionTagging
                - s3:PutObjectTagging
                - s3:PutObjectVersionTagging
              Resource: 'arn:aws:s3:::health-integration-garmin/*'
  ProcessDailiesSaveGarminWebhookProcessedFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/process-garmin-dailies-save-processed/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
      Environment:
        Variables:
          tableName: HealthIntegrationProcessed
  ProcessActivitiesSaveGarminWebhookProcessedFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/process-garmin-activities-save-processed/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
      Environment:
        Variables:
          tableName: HealthIntegrationProcessed
  GarminWebhookLandingZoneFunctionProcessDailiesSaveProcessed:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/garmin-webhook-landing-zone-process-dailies-save-processed/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          tableName: HealthIntegrationProcessed
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
          - Sid: PublishLayers
            Effect: Allow
            Action:
              - lambda:PublishLayerVersion
            Resource: 'arn:aws:lambda:*:*:layer:*:*'
          - Sid: ManageLayerVersions
            Effect: Allow
            Action:
              - lambda:GetLayerVersion
              - lambda:Getlayerversion
              - lambda:DeleteLayerVersion
              - lambda:AddLayerVersionPermission
              - lambda:RemoveLayerVersionPermission
            Resource: '*'
          - Sid: S3CustomPolicy
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutLifecycleConfiguration
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Resource: 'arn:aws:s3:::health-integration-garmin/*'
  GarminWebhookLandingZoneFunctionProcessActivitiesSaveProcessed:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/garmin-webhook-landing-zone-process-activities-save-processed/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Tracing: Active
      Timeout: 60
      Layers:
        - !Ref UtilityLayer
      Environment:
        Variables:
          tableName: HealthIntegrationProcessed
      Policies:
        - DynamoDBCrudPolicy:
            TableName: HealthIntegrationProcessed
        - DynamoDBReadPolicy:
            TableName: HealthIntegrationProcessed
        - S3WritePolicy:
            BucketName: health-integration-garmin
        - S3ReadPolicy:
            BucketName: health-integration-garmin
        - S3CrudPolicy:
            BucketName: health-integration-garmin
        - Statement:
            - Sid: PublishLayers
              Effect: Allow
              Action:
                - lambda:PublishLayerVersion
              Resource: 'arn:aws:lambda:*:*:layer:*:*'
            - Sid: ManageLayerVersions
              Effect: Allow
              Action:
                - lambda:GetLayerVersion
                - lambda:Getlayerversion
                - lambda:DeleteLayerVersion
                - lambda:AddLayerVersionPermission
                - lambda:RemoveLayerVersionPermission
              Resource: '*'
            - Sid: S3CustomPolicy
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:PutLifecycleConfiguration
                - s3:GetObjectTagging
                - s3:GetObjectVersionTagging
                - s3:PutObjectTagging
                - s3:PutObjectVersionTagging
              Resource: 'arn:aws:s3:::health-integration-garmin/*'
  UtilityLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: UtilityLayer
      Description: utility-dependencies
      ContentUri: ./layer/nodejs_dependencies
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Retain
  RubyUtilityLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: RubyUtilityLayer
      Description: ruby-utility-dependencies
      ContentUri: ./layer/ruby_dependencies
      CompatibleRuntimes:
        - ruby2.7
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Retain
Outputs:
  UtilityLayerArn:
    Value: !Ref UtilityLayer
    Description: UtilityLayer ARN
    Export:
      Name: utility-layer-arn
  RubyUtilityLayerArn:
    Value: !Ref RubyUtilityLayer
    Description: RubyUtilityLayer ARN
    Export:
      Name: rubyutility-layer-arn
