{
  "StartAt": "Handle Garmin Webhook",
  "States": {
    "Handle Garmin Webhook": {
      "Type": "Task",
      "Resource": "${HandleGarminWebhookFunctionArn}",
      "Next": "Check Webhook Type",
      "Parameters": {
        "result.$": "$.body"
      },
      "ResultSelector": {
        "result.$": "States.StringToJson($.body)"
      }
    },
    "Fetch Garmin Fit File": {
      "Type": "Task",
      "Resource": "${FetchGarminFitFileFunctionArn}",
      "Next": "Save Garmin Webhook - Landing Zone + Process Activities",
      "TimeoutSeconds": 60,
      "ResultSelector": {
        "result.$": "States.StringToJson($.body)"
      }
    },
    "Check Webhook Type": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.result.type",
          "StringEquals": "activityFiles",
          "Next": "Fetch Garmin Fit File"
        }
      ],
      "Default": "Save Garmin Webhook - Landing Zone + Process Activities"
    },
    "Save Garmin Webhook - Landing Zone + Process Activities": {
      "Type": "Task",
      "Resource": "${GarminWebhookLandingZoneFunctionProcessActivitiesArn}",
      "TimeoutSeconds": 60,
      "ResultSelector": {
        "result.$": "States.StringToJson($.body)"
      },
      "Next": "Check Purpose Type"
    },
    "Check Purpose Type": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.result.sendDataToBackend",
          "BooleanEquals": true,
          "Next": "Upload To Baseplatform"
        }
      ],
      "Default": "Save Garmin Processed Data"
    },
    "Upload To Baseplatform": {
      "Type": "Task",
      "Resource": "${UploadBaseplatformFunctionArn}",
      "TimeoutSeconds": 60,
      "Parameters": {
        "RetryCount.$": "$$.State.RetryCount",
        "result.$": "$.result"
      },
      "ResultSelector": {
        "result.$": "States.StringToJson($.body)"
      },
      "End": true
    },
    "Save Garmin Processed Data": {
      "Type": "Task",
      "Resource": "${SaveGarminWebhookProcessedFunctionArn}",
      "TimeoutSeconds": 60,
      "ResultSelector": {
        "result.$": "States.StringToJson($.body)"
      },
      "End": true
    }
  }
}